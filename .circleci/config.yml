version: 2.1

base_image: &base_image hashicorp/terraform:0.12.28

working_directory: &working_directory ~/terraform

defaults: &defaults
  working_directory: *working_directory
  docker:
    - image: *base_image

repo_cache_key: &repo_cache_key global-repo-{{ .Branch }}-{{ .Revision }}

restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

attach_working_directory: &attach_working_directory
  attach_workspace:
    at: *working_directory

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - *save_repo

  init:
    <<: *defaults
    steps:
      - *restore_repo
      - run:
          name: Setup variables
          command: |
            echo "access_key = \"$AWS_ACCESS_KEY\"
            secret_key = \"$AWS_SECRET_KEY\"" > terraform.tfvars
      - run:
          name: Init
          command: terraform init
      - persist_to_workspace:
          root: *working_directory
          paths:
            - .terraform

  format:
    <<: *defaults
    steps:
      - *restore_repo
      - *attach_working_directory
      - run:
          name: Format
          command: terraform fmt -check -recursive

  validate:
    <<: *defaults
    steps:
      - *restore_repo
      - *attach_working_directory
      - run:
          name: Validate
          command: terraform validate

  static-analysis:
    working_directory: /workdir
    docker:
      - image: wesleydeanflexion/tfsec
    steps:
      - checkout
      - attach_workspace:
          at: /workdir
      - run:
          name: Static code analyis
          command: tfsec .

  plan:
    <<: *defaults
    steps:
      - *restore_repo
      - *attach_working_directory
      - run:
          name: Plan
          command: terraform plan -out=terraform.plan -var "do_api_token=$DO_API_TOKEN"
      - run:
          name: Save plan in plain format
          command: |
            printf 'Terraform plan is:\n```\n%s\n```' "$(terraform show terraform.plan -no-color)" > terraform_plan_plain.txt
      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan
            - terraform_plan_plain.txt

  pr-comment:
    working_directory: *working_directory
    docker:
      - image: gustavkc/circleci-github-pr-commenter:latest
    steps:
      - *restore_repo
      - *attach_working_directory
      - run:
          name: Comment on PR
          command: |
            export PR_COMMENT=$(cat terraform_plan_plain.txt)
            node /app/pr-comment.js

  apply:
    <<: *defaults
    steps:
      - *restore_repo
      - *attach_working_directory
      - run:
          name: Apply
          command: terraform apply -auto-approve ./terraform.plan

workflows:
  version: 2
  validate_plan_apply:
    jobs:
      - checkout
      - init:
          requires:
            - checkout
      - format:
          requires:
            - init
      - validate:
          requires:
            - init
      - static-analysis:
          requires:
            - init
      - plan:
          requires:
            - format
            - validate
            - static-analysis
      - pr-comment:
          requires:
            - plan
          filters:
            branches:
              ignore:
                - master
      - approve:
          type: approval
          requires:
            - plan
          filters:
            branches:
              ignore:
                - master
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: master
